% Validation de http://hpxc/cregut.svn.enseeiht.fr/2021/1sn/pim/tps/lmeissne/tp10
% Run on 2021-12-06 08:14:29.568681


################################################################################
# Modification des fichiers fournis
################################################################################


================================================================================
## Fichiers qui NE devaient PAS être modifiés
================================================================================

* Fichier alea.adb non modifié... ok
* Fichier alea.ads non modifié... ok
* Fichier exemple_alea.adb non modifié... ok
* Fichier exemple_unbounded_string.adb non modifié... ok
* Fichier sda_exceptions.ads non modifié... ok
* Fichier test_lca.adb non modifié... ok

================================================================================
## Fichiers qui DEVAIENT être modifiés
================================================================================

* Fichier lca_sujet.adb modifié... ok
* Fichier lca.ads modifié... ok
* Fichier lca.adb modifié... ok
* Fichier evaluer_alea_lca.adb modifié... ok
* Fichier th_sujet.adb modifié... ok
* Fichier test_th.adb modifié... ok
* Fichier th.ads modifié... ok
* Fichier th.adb modifié... ok
* Fichier evaluer_alea_th.adb modifié... ok


################################################################################
# Nettoyer
################################################################################

* Running gnatclean... ok


################################################################################
# Exercice 1
################################################################################


================================================================================
## Modifications de lca.ads
================================================================================

* Comparaison de lca.ads et fournis/lca.ads... différents

   |         type T_Cellule;                                                                            |          -- TODO : à compléter
   |                                                                                                    <
   |         type T_LCA is access T_Cellule;                                                            <
   |                                                                                                    <
   |         type T_Cellule is                                                                          <
   |             record                                                                                 <
   |                     Cle : T_Cle;                                                                   <
   |                     Donnee : T_Donnee;                                                             <
   |                     Suivant : T_LCA;                                                               <
   |             end record;                                                                            <
   |                                                                                                    <


================================================================================
## Exécution de lca_sujet.adb
================================================================================

* Compilation de lca_sujet.adb... ok
* ./lca_sujet... ok
* valgrind ./lca_sujet... ok

================================================================================
## Exécution de test_lca.adb
================================================================================

* Compilation de test_lca.adb... ok

  | test_lca.adb:257:17: warning: variable "Inutile" is assigned but never read
  | test_lca.adb:280:35: warning: formal parameter "Cle" is not referenced

* ./test_lca... ok
* valgrind ./test_lca... ok


################################################################################
# Exercice 2
################################################################################


================================================================================
## Différences entre lca.ads et th.ads
================================================================================

* Comparaison de lca.ads et th.ads... différents

   |                                                                                                    >  with LCA;
   | -- Définition de structures de données associatives sous forme d'une liste                         |  -- Définition de structures de données associatives sous forme d'une d'un tableau dont les élément
   | -- chaînée associative (LCA).                                                                      |  -- chaînées associatives (LCA).
   |                                                                                                    >          Borne_max : Integer;
   |                                                                                                    >          -- Fonction de hachage pour connaitre la case dans laquelle est une clé, elle retourne la 
   |                                                                                                    >          with function Fonction_de_hachage (Cle : in T_Cle) return Integer;
   | package LCA is                                                                                     |
   |                                                                                                    >  package TH is
   | private                                                                                            <
   |         type T_Cellule;                                                                            <
   |         type T_LCA is access T_Cellule;                                                            <
   |         type T_Cellule is                                                                          |  private
   |             record                                                                                 |          --Utilisation des fonctions déja écrites dans les fichier lca.XXX pour décrire les cases d
   |                     Cle : T_Cle;                                                                   |          package LCA_Pour_TH is  
   |                     Donnee : T_Donnee;                                                             |                  new LCA(T_Cle , T_Donnee);
   |                     Suivant : T_LCA;                                                               |          use LCA_Pour_TH;  
   |             end record;                                                                            |
   |                                                                                                    >          type T_TH is array (1..Borne_max) of T_LCA ;  
   | end LCA;                                                                                           |  end TH;


================================================================================
## Différences entre test_lca.ads et test_th.ads
================================================================================

* Comparaison de test_lca.adb et test_th.adb... différents

   | with LCA;                                                                                          |  with TH;
   |                                                                                                    >            Maximum : Constant Integer := 20;
   |                                                                                                    >            function F_hachage ( Cle : in Unbounded_String) return Integer is
   |                                                                                                    >            begin
   |                                                                                                    >                  return (Length(Cle));
   |                                                                                                    >            end F_hachage;
   |         package LCA_String_Integer is                                                              |            package TH_String_Integer is
   |                 new LCA (T_Cle => Unbounded_String, T_Donnee => Integer);                          |                  new TH (T_Cle => Unbounded_String , T_Donnee => Integer, Borne_max => Maximum, Fon
   |         use LCA_String_Integer;                                                                    |            use TH_String_Integer;
   |                                                                                                    <


================================================================================
## Exécution de th_sujet.adb
================================================================================

* Compilation de th_sujet.adb... ok
* ./th_sujet... ok
* valgrind ./th_sujet... ok

================================================================================
## Exécution de test_th.adb
================================================================================

* Compilation de test_th.adb... ok

  | test_th.adb:261:17: warning: variable "Inutile" is assigned but never read
  | test_th.adb:284:35: warning: formal parameter "Cle" is not referenced

* ./test_th... ok
* valgrind ./test_th... ok


################################################################################
# Exercice 3
################################################################################


================================================================================
## Différences entre evaluer_alea_lca.ads et evaluer_alea_th.ads
================================================================================

* Comparaison de evaluer_alea_lca.adb et evaluer_alea_th.adb... différents

   | with LCA;                                                                                          |  with TH;
   |                                                                                                    |  -- Évaluer la qualité du générateur aléatoire et les TH.
   |                                                                                                    <
   | -- Évaluer la qualité du générateur aléatoire et les LCA.                                          <
   |                                                                                                    >                  function Identite (Cle : in Integer) return Integer is
   |                                                                                                    >                  begin
   |                                                                                                    >                          return Cle;
   |                                                                                                    >                  end Identite;
   |                                                                                                    >
   |                                                                                                    >                  package TH_Integer_Integer is
   |                                                                                                    >                          new TH (T_Cle => Integer , T_Donnee => Integer, Borne_max => 1000, Fonctio
   |                                                                                                    >                  use TH_Integer_Integer;
   |                 package LCA_Integer_Integer is                                                     |                  procedure Recherche is new TH_Integer_Integer.Pour_Chaque(Traiter => Recherche_Min
   |                         new LCA (T_Cle => Integer , T_Donnee => Integer);                          <
   |                 use LCA_Integer_Integer;                                                           <
   |                                                                                                    <
   |                 procedure Recherche is new LCA_Integer_Integer.Pour_Chaque(Traiter => Recherche_Mi <
   |                 when Constraint_Error => Afficher_Usage;                                           |          when Constraint_Error =>
   |                                                                                                    >
   |                                                                                                    >                  Afficher_Usage;
   |                                                                                                    >
   |                                                                                                    >


================================================================================
## Exécutions de evaluer_alea_*
================================================================================

* Running gnatclean... ok
* Compilation de evaluer_alea_lca.adb... ok

  | evaluer_alea_lca.adb:4:06: warning: no entities of "SDA_Exceptions" are referenced
  | evaluer_alea_lca.adb:4:28: warning: use clause for package "SDA_Exceptions" has no effect
  | evaluer_alea_lca.adb:74:46: warning: formal parameter "Cle" is not referenced

* Compilation de evaluer_alea_th.adb... ok

  | evaluer_alea_th.adb:4:06: warning: no entities of "SDA_Exceptions" are referenced
  | evaluer_alea_th.adb:4:28: warning: use clause for package "SDA_Exceptions" has no effect
  | evaluer_alea_th.adb:76:46: warning: formal parameter "Cle" is not referenced


================================================================================
## Tests nominaux
================================================================================


--------------------------------------------------------------------------------
### Cas : Classique : dé à 6 faces, 100 tirages
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 6 100... ok

  | Borne  : 6
  | Taille : 100
  | Min : 12
  | Max : 18

* valgrind ./evaluer_alea_lca 6 100... ok

  | Borne  : 6
  | Taille : 100
  | Min : 13
  | Max : 21

* ./evaluer_alea_th 6 100... ok

  | Borne  : 6
  | Taille : 100
  | Min : 11
  | Max : 20

* valgrind ./evaluer_alea_th 6 100... ok

  | Borne  : 6
  | Taille : 100
  | Min : 11
  | Max : 20


--------------------------------------------------------------------------------
### Cas : Beaucoup de doubles
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 5 100... ok

  | Borne  : 5
  | Taille : 100
  | Min : 12
  | Max : 27

* ./evaluer_alea_th 5 100... ok

  | Borne  : 5
  | Taille : 100
  | Min : 14
  | Max : 24


--------------------------------------------------------------------------------
### Cas : Peu de doubles
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 100000 10... ERREUR: Ne se termine pas !
* ./evaluer_alea_th 100000 10... ok

  | Borne  : 100000
  | Taille : 10
  | Min : 0
  | Max : 1


--------------------------------------------------------------------------------
### Cas : Limite pour Borne et Taille
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 2 2... ok

  | Borne  : 2
  | Taille : 2
  | Min : 1
  | Max : 1

* ./evaluer_alea_th 2 2... ok

  | Borne  : 2
  | Taille : 2
  | Min : 1
  | Max : 1


================================================================================
## Tests de robustesse
================================================================================


--------------------------------------------------------------------------------
### Cas : Deux entiers attendus
--------------------------------------------------------------------------------

* ./evaluer_alea_lca XYZ ZYT... ok

  | Usage : ./evaluer_alea_lca Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon

* ./evaluer_alea_th XYZ ZYT... ok

  | Usage : ./evaluer_alea_th Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon


--------------------------------------------------------------------------------
### Cas : Taille doit être un entier
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 10 ZYT... ok

  | Usage : ./evaluer_alea_lca Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon

* ./evaluer_alea_th 10 ZYT... ok

  | Usage : ./evaluer_alea_th Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon


--------------------------------------------------------------------------------
### Cas : Borne doit être un entier
--------------------------------------------------------------------------------

* ./evaluer_alea_lca XYZ 30... ok

  | Usage : ./evaluer_alea_lca Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon

* ./evaluer_alea_th XYZ 30... ok

  | Usage : ./evaluer_alea_th Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon


--------------------------------------------------------------------------------
### Cas : Borne et Taille doivent être strictement positifs
--------------------------------------------------------------------------------

* ./evaluer_alea_lca -4 -10... ERREUR

  | Borne  : -4
  | Taille : -10


  ! raised SDA_EXCEPTIONS.CLE_ABSENTE_EXCEPTION : lca.adb:76 instantiated at evaluer_alea_lca.adb:88

* ./evaluer_alea_th -4 -10... ERREUR

  | Borne  : -4
  | Taille : -10


  ! raised SDA_EXCEPTIONS.CLE_ABSENTE_EXCEPTION : lca.adb:76 instantiated at th.ads:74 instantiated at evaluer_alea_th.adb:89


--------------------------------------------------------------------------------
### Cas : Taille doit être strictement positif
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 4 -10... ERREUR

  | Borne  : 4
  | Taille : -10


  ! raised SDA_EXCEPTIONS.CLE_ABSENTE_EXCEPTION : lca.adb:76 instantiated at evaluer_alea_lca.adb:88

* ./evaluer_alea_th 4 -10... ERREUR

  | Borne  : 4
  | Taille : -10


  ! raised SDA_EXCEPTIONS.CLE_ABSENTE_EXCEPTION : lca.adb:76 instantiated at th.ads:74 instantiated at evaluer_alea_th.adb:89


--------------------------------------------------------------------------------
### Cas : Borne doit être strictement positif
--------------------------------------------------------------------------------

* ./evaluer_alea_lca -4 10... ok

  | Borne  : -4
  | Taille : 10
  | 
  | Usage : ./evaluer_alea_lca Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon

* ./evaluer_alea_th -4 10... ok

  | Borne  : -4
  | Taille : 10
  | 
  | Usage : ./evaluer_alea_th Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon


--------------------------------------------------------------------------------
### Cas : Il manque la taille (ou la borne)
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 5... ok

  | Usage : ./evaluer_alea_lca Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon

* ./evaluer_alea_th 5... ok

  | Usage : ./evaluer_alea_th Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon


--------------------------------------------------------------------------------
### Cas : Borne doit être un entier ou il manque la taille
--------------------------------------------------------------------------------

* ./evaluer_alea_lca XYZ... ok

  | Usage : ./evaluer_alea_lca Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon

* ./evaluer_alea_th XYZ... ok

  | Usage : ./evaluer_alea_th Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon


--------------------------------------------------------------------------------
### Cas : Taille doit être strictement positif
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 4 0... ERREUR

  | Borne  : 4
  | Taille : 0


  ! raised SDA_EXCEPTIONS.CLE_ABSENTE_EXCEPTION : lca.adb:76 instantiated at evaluer_alea_lca.adb:88

* ./evaluer_alea_th 4 0... ERREUR

  | Borne  : 4
  | Taille : 0


  ! raised SDA_EXCEPTIONS.CLE_ABSENTE_EXCEPTION : lca.adb:76 instantiated at th.ads:74 instantiated at evaluer_alea_th.adb:89


--------------------------------------------------------------------------------
### Cas : Borne doit être strictement positif
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 0 100... ok

  | Borne  : 0
  | Taille : 100
  | 
  | Usage : ./evaluer_alea_lca Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon

* ./evaluer_alea_th 0 100... ok

  | Borne  : 0
  | Taille : 100
  | 
  | Usage : ./evaluer_alea_th Borne Taille
  | 
  |    Borne  : les nombres sont tirés dans l'intervalle 1..Borne
  |    Taille : la taille de l'échantillon


--------------------------------------------------------------------------------
### Cas : Borne = 1 : Ne respecte pas la précondition de Calculer_Statistiques
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 1 100... ok

  | Borne  : 1
  | Taille : 100
  | Min : 100
  | Max : 100

* ./evaluer_alea_th 1 100... ok

  | Borne  : 1
  | Taille : 100
  | Min : 100
  | Max : 100


--------------------------------------------------------------------------------
### Cas : Taille = 1 : Ne respecte pas la précondition de Calculer_Statistiques
--------------------------------------------------------------------------------

* ./evaluer_alea_lca 10 1... ok

  | Borne  : 10
  | Taille : 1
  | Min : 0
  | Max : 1

* ./evaluer_alea_th 10 1... ok

  | Borne  : 10
  | Taille : 1
  | Min : 0
  | Max : 1



################################################################################
# Nettoyer
################################################################################

* Running gnatclean... ok

<!-- vi: set ts=8: -->
