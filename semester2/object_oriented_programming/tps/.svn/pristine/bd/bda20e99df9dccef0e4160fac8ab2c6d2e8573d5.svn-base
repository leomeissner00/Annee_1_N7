package allumettes;

public class JeuAllumettes implements Jeu {

	/** Nombre maximal d'allumettes pouvant être prises. */
	int PRISE_MAX = 3;

    /**Nombres d'allumettes encore en jeu. */
    private int nbAllumettes;

	/** Obtenir le nombre d'allumettes encore en jeu.
	 * @return nombre d'allumettes encore en jeu
	 */
	public int getNombreAllumettes(){
        int temp = this.nbAllumettes;
        return temp;
    }

	/** Retirer des allumettes.  Le nombre d'allumettes doit être compris
	 * entre 1 et PRISE_MAX, dans la limite du nombre d'allumettes encore
	 * en jeu.
	 * @param nbPrises nombre d'allumettes prises.
	 * @throws CoupInvalideException tentative de prendre un nombre invalide d'allumettes
	 */
	public void retirer(int nbPrises) throws CoupInvalideException{
        if (nbPrises < 1) {
            throw new CoupInvalideException(this.nbAllumettes, "Impossible ! Nombre invalide : "+nbAllumettes+" (< 1)");
        }

        if (nbPrises > 3) {
            throw new CoupInvalideException(this.nbAllumettes, "Impossible ! Nombre invalide : "+nbAllumettes+" (> 3)");
        }

        if (nbPrises < 1) {
            throw new CoupInvalideException(this.nbAllumettes, "Vous devez donner un entier.");
        }
        this.nbAllumettes -= nbPrises; 
    }
}
