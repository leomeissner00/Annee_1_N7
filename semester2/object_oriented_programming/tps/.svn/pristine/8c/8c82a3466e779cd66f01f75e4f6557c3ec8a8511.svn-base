import java.awt.Color;
import org.junit.*;
import static org.junit.Assert.*;

/**
  * Classe de test des exigences E12, E13 et E14 de la classe Cercle.
  * @author	Léo Meissner
  */
public class CercleTest {

	// précision pour les comparaisons réelle
	public final static double EPSILON = 0.001;

	// Les points du sujet
	private Point A, B, C, D, E, F, G, I;

	// Les cercles du sujet
	private Cercle C1, C2, C3, C4;

	@Before public void setUp() {
		// Construire les points
		A = new Point(6, 1);
		B = new Point(2, 1);
		C = new Point(4, 1);
		D = new Point(8, 1);
		E = new Point(8, 4);
		
		F = new Point(0, 0);
		G = new Point(5, 5);
		I = new Point(-5, -5);
		

		// Construire les cercles
		C1 = new Cercle(C, D);
        C2 = new Cercle(C, D, Color.yellow);
        C4 = new Cercle(G, I);
	}

	/** Vérifier si deux points ont mêmes coordonnées.
	  * @param p1 le premier point
	  * @param p2 le deuxième point
	  */
	static void memesCoordonnees(String message, Point p1, Point p2) {
		assertEquals(message + " (x)", p1.getX(), p2.getX(), EPSILON);
		assertEquals(message + " (y)", p1.getY(), p2.getY(), EPSILON);
	}

	@Test public void testerE12_1() {
		memesCoordonnees("E12 : Centre de C1 incorrect", A, C1.getCentre());
		assertEquals("E12 : Rayon de C1 incorrect",
				2, C1.getRayon(), EPSILON);
		assertEquals(Color.blue, C1.getCouleur());
		
		C4.afficher();
		memesCoordonnees("E12 : Centre de C1 incorrect", F, C4.getCentre());
		assertEquals("E12 : Rayon de C1 incorrect",
				5*Math.sqrt(2), C4.getRayon(), EPSILON);
		assertEquals(Color.blue, C1.getCouleur());
	}

	@Test public void testerE13_1() {
		memesCoordonnees("E13 : Centre de C2 incorrect", A, C2.getCentre());
		assertEquals("E13 : Rayon de C2 incorrect",
				2, C2.getRayon(), EPSILON);
		assertEquals(Color.yellow, C2.getCouleur());
	}
	
	@Test public void testerE13_2() {
		C2 = new Cercle(B, D);
		memesCoordonnees("E14 : Centre de C2 incorrect", new Point(5, 1), C2.getCentre());
		assertEquals("E14 : Rayon de C2 incorrect",
				3, C2.getRayon(), EPSILON);
		assertEquals(Color.blue, C2.getCouleur());
	}
	
	@Test public void testerE14_1() {
		C2 = Cercle.creerCercle(B, D);
		memesCoordonnees("E14 : Centre de C2 incorrect", B, C2.getCentre());
		assertEquals("E14 : Rayon de C2 incorrect",
				6, C2.getRayon(), EPSILON);
		assertEquals(Color.blue, C2.getCouleur());
	}
	
	@Test public void testerE14_2() {
        C3 = Cercle.creerCercle(D, E);
		memesCoordonnees("E14 : Centre de C3 incorrect", D, C3.getCentre());
		assertEquals("E14 : Rayon de C3 incorrect",
				3, C3.getRayon(), EPSILON);
		assertEquals(Color.blue, C3.getCouleur());
		
	}



}